//
//  WithLSP.swift
//  SOLID
//
//  Created by Gio Kakaladze on 13.11.24.
//

//მოცემული კოდი არ არღვევს LSP-ს, რადგან ყველა შვილობილი კლასი შეესაბამება მშობელი კლასის ქცევას და არ ცვლის ძირითად ლოგიკას. ამ კონკრეტულ მაგალითში, სადაც Tesla და BMW კლასები შეიცავენ start() მეთოდს, ორივე კლასის ქცევა ისეთია, რომ დაცულია საერთო ლოგიკა მანქანა ირთვება/იქოქება. Tesla-ც უნდა დაიქოქოს, მაგრამ განსხვავებული ფორმით, რაც არ არღვევს LSP-ს. შესაბამისად, შვილობილი კლასები იღებენ მშობელი კლასის ქცევას ლოგიკურად და კოდი ამ შემთხვევაში ერთგვაროვანია და არ აჩენს კითხვებს გამართულობასთან დაკავშირებით.

class Vehicle1 {
    func start() {
        print("Vehicle started")
    }
}

class Bmw1: Vehicle1 {
    override func start() {
        print("BMW engine started")
    }
}

class Tesla1: Vehicle1 {
    override func start() {
        print("Tesla powered on") // აქ მოერგო და ჩაირთო რადგან მშოვებელი კლასი არ თხოვს ძრავის დაქოქვას.
    }
}




